{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/maekawaminoruyoshiko/program/AtCodersInformation/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Header from './Header.js';\nimport Main from './Main.js';\nimport axios from 'axios';\nimport moment from 'moment';\n\nconst App = () => {\n  _s();\n\n  const [contestsList, setContestsList] = useState([]);\n  const [displayList, setDisplayList] = useState([]); // 情報取得  ok\n\n  const getInformation = async () => {\n    try {\n      const result = await axios.get(`${'https://kenkoooo.com/atcoder/resources/contests.json'}`);\n      result.data.sort((a, b) => {\n        if (a.start_epoch_second > b.start_epoch_second) {\n          return -1;\n        } else {\n          return 1;\n        }\n      });\n      objectChange(result.data);\n      setContestsList(result.data);\n      setDisplayList(result.data);\n      console.log(displayCount, \"first\");\n      console.log(\"a\");\n    } catch (error) {\n      // リクエストに失敗した時の処理\n      console.log('error!!');\n    }\n  }; // 日本時間、コンテスト時間　ok \n\n\n  const objectChange = list => {\n    return list.map(contest => {\n      contest.start = moment.unix(contest.start_epoch_second).format(\"YYYY-MM-DD HH:mm\");\n      contest.duration_second = contest.duration_second / 60 + 'min'; // => 試験時間(分)\n\n      contest.url = `https://atcoder.jp/contests/${contest.id}`;\n      return contest;\n    });\n  };\n\n  useEffect(() => {\n    getInformation(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"ooBFYUmvNWYnfetc5Kdl3gxfVss=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/maekawaminoruyoshiko/program/AtCodersInformation/src/App.js"],"names":["React","useState","useEffect","Header","Main","axios","moment","App","contestsList","setContestsList","displayList","setDisplayList","getInformation","result","get","data","sort","a","b","start_epoch_second","objectChange","console","log","displayCount","error","list","map","contest","start","unix","format","duration_second","url","id"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,EAAD,CAA9C,CAFgB,CAIhB;;AACA,QAAMW,cAAc,GAAG,YAAY;AACjC,QAAI;AACF,YAAMC,MAAM,GAAG,MAAMR,KAAK,CAACS,GAAN,CAClB,GAAE,sDAAuD,EADvC,CAArB;AAGAD,MAAAA,MAAM,CAACE,IAAP,CAAYC,IAAZ,CAAiB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACzB,YAAID,CAAC,CAACE,kBAAF,GAAuBD,CAAC,CAACC,kBAA7B,EAAiD;AAC/C,iBAAO,CAAC,CAAR;AACD,SAFD,MAEO;AACL,iBAAO,CAAP;AACD;AACF,OAND;AAOAC,MAAAA,YAAY,CAACP,MAAM,CAACE,IAAR,CAAZ;AACAN,MAAAA,eAAe,CAACI,MAAM,CAACE,IAAR,CAAf;AACAJ,MAAAA,cAAc,CAACE,MAAM,CAACE,IAAR,CAAd;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYC,YAAZ,EAA0B,OAA1B;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACD,KAhBD,CAgBE,OAAOE,KAAP,EAAc;AACd;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD;AACF,GArBD,CALgB,CA4BhB;;;AACA,QAAMF,YAAY,GAAIK,IAAD,IAAU;AAC7B,WAAOA,IAAI,CAACC,GAAL,CAASC,OAAO,IAAI;AACzBA,MAAAA,OAAO,CAACC,KAAR,GAAgBtB,MAAM,CAACuB,IAAP,CAAYF,OAAO,CAACR,kBAApB,EAAwCW,MAAxC,CAA+C,kBAA/C,CAAhB;AACAH,MAAAA,OAAO,CAACI,eAAR,GAA0BJ,OAAO,CAACI,eAAR,GAA0B,EAA1B,GAA+B,KAAzD,CAFyB,CAEqC;;AAC9DJ,MAAAA,OAAO,CAACK,GAAR,GAAe,+BAA8BL,OAAO,CAACM,EAAG,EAAxD;AACA,aAAON,OAAP;AACD,KALM,CAAP;AAMD,GAPD;;AASAzB,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,cAAc,GADA,CAEd;AACD,GAHQ,EAGN,EAHM,CAAT;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAnDD;;GAAML,G;;KAAAA,G;AAqDN,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport './App.css'\nimport Header from './Header.js'\nimport Main from './Main.js'\nimport axios from 'axios'\nimport moment from 'moment'\n\nconst App = () => {\n  const [contestsList, setContestsList] = useState([])\n  const [displayList, setDisplayList] = useState([])\n\n  // 情報取得  ok\n  const getInformation = async () => {\n    try {\n      const result = await axios.get(\n        `${'https://kenkoooo.com/atcoder/resources/contests.json'}`\n      )\n      result.data.sort((a, b) => {\n        if (a.start_epoch_second > b.start_epoch_second) {\n          return -1;\n        } else {\n          return 1;\n        }\n      })\n      objectChange(result.data)\n      setContestsList(result.data)\n      setDisplayList(result.data)\n      console.log(displayCount, \"first\")\n      console.log(\"a\")\n    } catch (error) {\n      // リクエストに失敗した時の処理\n      console.log('error!!')\n    }\n  }\n\n  // 日本時間、コンテスト時間　ok \n  const objectChange = (list) => {\n    return list.map(contest => {\n      contest.start = moment.unix(contest.start_epoch_second).format(\"YYYY-MM-DD HH:mm\")\n      contest.duration_second = contest.duration_second / 60 + 'min'// => 試験時間(分)\n      contest.url = `https://atcoder.jp/contests/${contest.id}`\n      return contest\n    })\n  }\n\n  useEffect(() => {\n    getInformation()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Main />\n    </div>\n\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}