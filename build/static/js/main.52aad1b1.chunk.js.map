{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","contestsList","setContestsList","displayList","setDisplayList","type","setType","keyword","setKeyword","displayCount","setDisplayCount","sort","setSort","useEffect","getInformation","a","axios","get","result","data","b","start_epoch_second","objectChange","console","log","list","map","contest","start","Date","toString","replace","duration_second","url","id","searchFilter","e","line","filter","toLowerCase","indexOf","title","sortFilter","className","onChange","target","value","length","class","placeholder","keywordChange","index","href","rel","rate_change","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.52aad1b1.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport './App.css'\nimport axios from 'axios'\n\nconst App = () => {\n  const [contestsList, setContestsList] = useState([])\n  const [displayList, setDisplayList] = useState([])\n  const [type, setType] = useState('all')\n  const [keyword, setKeyword] = useState('')\n  const [displayCount, setDisplayCount] = useState(10)\n  const [sort, setSort] = useState('newer')\n\n  useEffect(() =>{ \n    getInformation()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  // 情報取得  ok\n  const getInformation = async () => {\n    try {\n      const result = await axios.get(\n        `${'https://kenkoooo.com/atcoder/resources/contests.json'}`\n      )\n      result.data.sort((a, b) => {\n        if (a.start_epoch_second > b.start_epoch_second) {\n            return -1;\n        } else {\n            return 1;\n        }\n      })\n      objectChange(result.data)\n      setContestsList(result.data)\n      setDisplayList(result.data)\n      console.log(displayCount, \"first\")\n      console.log(\"a\")\n    } catch (error) {\n      // リクエストに失敗した時の処理\n      console.log('error!!')\n    }\n  }\n\n  // 日本時間、コンテスト時間　ok \n  const objectChange = (list) => {\n    return list.map(contest => {\n      contest.start = new Date(contest.start_epoch_second * 1000).toString()\n      contest.start = contest.start.replace(' GMT+0900 (日本標準時)', '')\n      contest.duration_second =  contest.duration_second / 60 + 'min'// => 試験時間(分)\n      contest.url = 'https://atcoder.jp/contests/' + contest.id\n      return contest\n    })\n  }\n\n  // もっと見る   ok\n  const onClickShowMore = () => {\n    setDisplayCount(displayCount => displayCount + 10)\n    console.log(displayCount, \"more\")\n  }\n\n  // 種類  ok\n  const typeHandleChange = (e) => {\n    setType(e.target.value)\n    if(displayList.length === contestsList.length) {\n      setDisplayList(contestsList.filter((contest) => {\n        return contest.id.indexOf(e.target.value) !== -1\n      }))\n    }else {\n      setDisplayList(contestsList.filter((contest) => {\n        return ( contest.id.indexOf(e.target.value) !== -1\n          && (contest.id.toLowerCase().indexOf(keyword) >= 0\n          || contest.start.toString().indexOf(keyword) >= 0\n          || contest.duration_second.toString().indexOf(keyword) >= 0\n          || contest.title.toLowerCase().indexOf(keyword) >= 0\n        ))\n      }))\n    }\n    console.log(e.target.value, sort)\n    sortFilter(sort)\n  }\n  \n  // 検索    ok\n  const keywordChange = (e) => {\n    setKeyword(e.target.value)\n    searchFilter(e.target.value)\n  }\n  const searchFilter = (e) => {\n    // filter()で絞り込み、絞り込んだ配列をline変数に格納\n    const line = contestsList.filter((contest) => (\n      // キーワードが含まれていればtrueを返す\n      ( contest.id.toLowerCase().indexOf(e) >= 0\n      || contest.start.toString().indexOf(e) >= 0\n      || contest.duration_second.toString().indexOf(e) >= 0\n      || contest.title.toLowerCase().indexOf(e) >= 0 )\n      && contest.id.indexOf(type) !== -1\n    ))\n    setDisplayList(line)\n    console.log(e)\n  }\n\n  \n  // 表示件数  ok\n  const displayCountHandleChange = (e) => {\n    setDisplayCount(+e.target.value)\n    console.log(displayCount, \"change\")\n  }\n\n  // 並び替え   ok\n  const sortHandleChange = (e) => {\n    setSort(e.target.value)\n    sortFilter(e.target.value)\n    console.log(e.target.value)\n  }\n  const sortFilter = (e) => {\n    if (e === 'newer') {\n      setDisplayList(displayList => displayList.sort ((a, b) => {\n        if (a.start_epoch_second > b.start_epoch_second) {\n            return -1;\n        } else {\n            return 1;\n        }\n      }))\n    }if (e === 'older') {\n      setDisplayList(displayList => displayList.sort ((a, b) => {\n        if (a.start_epoch_second < b.start_epoch_second) {\n            return -1;\n        } else {\n            return 1;\n        }\n      }))\n    }if (e === 'abcSort') {\n      setDisplayList(displayList => displayList.sort ((a, b) => {\n        if (a.title < b.title) {\n            return -1;\n        } else {\n            return 1;\n        }\n      }))\n    }\n  }\n\n  return (\n    <div className=\"App\">\n\n      <div className='header'>\n        <h1 className='headerLogo'>Atcoder Contests Information</h1>\n\n        <div className=\"formats\">\n          <div className='format select'>\n            <select　onChange={typeHandleChange} value={type}>\n              <option value=''>ALL</option>\n              <option value='abc'>ABC</option>\n              <option value='arc'>ARC</option>\n              <option value='agc'>AGC</option>\n              <option value='past'>PAST</option>\n              <option value='joi'>JOI</option>\n              <option value='jag'>JAG</option>\n            </select>\n          </div>\n          <div className='format select'>\n            <select　onChange={displayCountHandleChange} value={displayCount}>\n              <option value='10'>10件表示</option>\n              <option value='50'>50件表示</option>\n              <option value='100'>100件表示</option>\n              <option value= {displayList.length} >全件表示</option>\n            </select>\n          </div>\n          <div className='format select'>\n            <select onChange={sortHandleChange} value={sort} className=\"sortSelect\">\n              <option value='newer'>新しい順</option>\n              <option value='older'>古い順</option>\n              <option value='abcSort'>五十音順</option>\n            </select>\n          </div>\n          <div className='format'>\n            <label class=\"formatFocus\">\n            <input\n              className='textFormat'\n              type = 'text'\n              value = {keyword}\n              placeholder = 'Keyword'\n              onChange= {(e) => {keywordChange(e)}} \n            />\n            </label>\n\t          <span class=\"focus_line\"></span>\n          </div>\n        </div>\n      </div>\n\n      <div className='main'>\n        <div className='title'>\n          <h2>Information about the contests</h2>\n        </div>\n\n        { displayList.map((contest, index) => {\n          if (index >= displayCount) return null\n          return (\n            <div className=\"contestsTable\">\n              <h3><a href={contest.url} className='contestTitle'　target=\"_blank\" rel=\"noopener noreferrer\">{contest.title}</a></h3>\n              <table>\n                <tbody>\n                    <tr>\n                        <th>Start Time</th>\n                        <td>{contest.start}</td>\n                    </tr>\n                    <tr>\n                        <th>Duration</th>\n                        <td>{contest.duration_second}</td>\n                    </tr>\n                    <tr>\n                        <th>Rated Range</th>\n                        <td>{contest.rate_change}</td>\n                    </tr>\n                    <tr>\n                        <th>URL</th>\n                        <td><a href={contest.url}　target=\"_blank\" rel=\"noopener noreferrer\">{contest.url}</a></td>\n                    </tr>\n                </tbody>\n              </table>\n            </div>\n          )\n        })}\n\n        { displayCount < displayList.length && (\n          <button\n            className = 'showMoreButton'\n            onClick = {() => {onClickShowMore()}}\n          >\n            More...\n          </button>\n        )}\n        \n        {displayCount >= displayList.length && (\n          <p className = 'noMore'>No more</p>\n        )}\n\n      </div>\n\n    </div>\n\n  )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}