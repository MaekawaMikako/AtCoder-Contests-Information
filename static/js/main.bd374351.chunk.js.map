{"version":3,"sources":["Components/Header.js","Components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","useState","type","setType","keyword","setKeyword","sort","setSort","searchFilter","filterType","filterWord","regWord","RegExp","regType","contestsList","filter","contest","test","start","duration_second","title","url","rate_change","id","sortFilter","searchedList","filterSort","slice","a","b","start_epoch_second","className","onChange","target","value","searched","sorted","setDisplayList","console","log","displayList","count","setDisplayCount","displayCount","length","class","placeholder","text","keywordChange","Main","map","index","href","rel","onClick","App","setContestsList","getInformation","axios","get","result","data","objectChange","list","moment","unix","format","useEffect","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bd374351.chunk.js","sourcesContent":["import React, { useState } from 'react'\n\nconst Header = (props) => {\n    const [type, setType] = useState('')\n    const [keyword, setKeyword] = useState('')\n    const [sort, setSort] = useState('newer')\n\n    // 種類\n    const typeHandleChange = (filterType) => {\n        setType(filterType.target.value)\n        const searched = searchFilter(filterType.target.value, keyword)\n        const sorted = sortFilter(searched, sort)\n        props.setDisplayList(sorted)\n        sortFilter(sort)\n        console.log('type', filterType.target.value, props.contestsList, props.displayList)\n    }\n\n    // 検索\n    const keywordChange = (filterWord) => {\n        setKeyword(filterWord.target.value)\n        const searched = searchFilter(type, filterWord.target.value)\n        const sorted = sortFilter(searched, sort)\n        props.setDisplayList(sorted)\n        console.log('text', filterWord.target.value, props.contestsList, props.displayList)\n    }\n\n    // 空白のとこ\n    const searchFilter = (filterType, filterWord) => {\n        const regWord = new RegExp(`.*${filterWord}.*`)\n        const regType = new RegExp(`^(?=.*${filterType}).*$`)\n        return (props.contestsList.filter((contest) => {\n            // console.log(contest.title, 'text:', regWord.test(`${contest.start}${contest.duration_second}${contest.title}${contest.url}${contest.rate_change}`), 'id:', regType.test(`${contest.id}`))\n            return regWord.test(`${contest.start}${contest.duration_second}${contest.title}${contest.url}${contest.rate_change}`) && regType.test(`${contest.id}`)\n        }))\n        console.log(props.contestsList, props.displayList)\n    }\n\n    // 表示件数\n    const displayCountHandleChange = (count) => {\n        props.setDisplayCount(+count.target.value)\n        console.log(props.displayCount, \"count\")\n    }\n\n    // 並び替え   ok\n    const sortHandleChange = (filterSort) => {\n        setSort(filterSort.target.value)\n        const sorted = sortFilter(props.displayList, filterSort.target.value)\n        props.setDisplayList(sorted)\n        console.log(filterSort.target.value)\n    }\n\n    const sortFilter = (searchedList, filterSort) => {\n        if (filterSort === 'newer') {\n            return (searchedList.slice().sort((a, b) => {\n                if (a.start_epoch_second > b.start_epoch_second) {\n                    return -1;\n                } else {\n                    return 1;\n                }\n            }))\n        }\n        if (filterSort === 'older') {\n            return (searchedList.slice().sort((a, b) => {\n                if (a.start_epoch_second < b.start_epoch_second) {\n                    return -1;\n                } else {\n                    return 1;\n                }\n            }))\n        }\n        if (filterSort === 'abcSort') {\n            return (searchedList.slice().sort((a, b) => {\n                if (a.title < b.title) {\n                    return -1;\n                } else {\n                    return 1;\n                }\n            }))\n        }\n    }\n\n    return (\n        <div className='header'>\n            <h1 className='header-logo'>Atcoder Contests Information</h1>\n\n            <div className=\"formats\">\n                <div className='format select'>\n                    <select onChange={typeHandleChange} value={type}>\n                        <option value=''>ALL</option>\n                        <option value='abc'>ABC</option>\n                        <option value='arc'>ARC</option>\n                        <option value='agc'>AGC</option>\n                        <option value='past'>PAST</option>\n                        <option value='joi'>JOI</option>\n                        <option value='jag'>JAG</option>\n                    </select>\n                </div>\n                <div className='format select'>\n                    <select onChange={displayCountHandleChange} value={props.displayCount}>\n                        <option value='10'>10件表示</option>\n                        <option value='50'>50件表示</option>\n                        <option value='100'>100件表示</option>\n                        <option value={props.displayList.length} >全件表示</option>\n                    </select>\n                </div>\n                <div className='format select'>\n                    <select onChange={sortHandleChange} value={sort} className=\"sortSelect\">\n                        <option value='newer'>新しい順</option>\n                        <option value='older'>古い順</option>\n                        <option value='abcSort'>五十音順</option>\n                    </select>\n                </div>\n                <div className='format'>\n                    <label class=\"format-focus\">\n                        <input\n                            className='text-format'\n                            type='text'\n                            value={keyword}\n                            placeholder='Keyword'\n                            onChange={(text) => { keywordChange(text) }}\n                        />\n                    </label>\n                    <span class=\"focus_line\"></span>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Header","import React from 'react'\n\nconst Main = (props) => {\n    // もっと見る   ok\n    const onClickShowMore = () => {\n        props.setDisplayCount(props.displayCount + 10)\n        console.log(props.displayCount, \"more\")\n    }\n\n    return (\n        <div className='main'>\n            <div className='title'>\n                <h2>Information about the contests</h2>\n            </div>\n\n            {props.displayList.map((contest, index) => {\n                if (index >= props.displayCount) return null\n                return (\n                    <div className=\"contests-table\">\n                        <h3><a href={contest.url} className='contest-title' target=\"_blank\" rel=\"noopener noreferrer\">{contest.title}</a></h3>\n                        <table>\n                            <tbody>\n                                <tr>\n                                    <th>Start Time</th>\n                                    <td>{contest.start}</td>\n                                </tr>\n                                <tr>\n                                    <th>Duration</th>\n                                    <td>{contest.duration_second}</td>\n                                </tr>\n                                <tr>\n                                    <th>Rated Range</th>\n                                    <td>{contest.rate_change}</td>\n                                </tr>\n                                <tr>\n                                    <th>URL</th>\n                                    <td><a href={contest.url} target=\"_blank\" rel=\"noopener noreferrer\">{contest.url}</a></td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                )\n            })}\n\n            {props.displayCount < props.displayList.length && (\n                <button\n                    className='show-more-button'\n                    onClick={() => { onClickShowMore() }}\n                >\n                    More...\n                </button>\n            )}\n\n            {props.displayCount >= props.displayList.length && (\n                <p className='no-more'>No more</p>\n            )}\n\n        </div>\n    )\n}\n\nexport default Main","import React, { useState, useEffect } from 'react'\nimport './App.css'\nimport Header from './Components/Header.js'\nimport Main from './Components/Main.js'\nimport axios from 'axios'\nimport moment from 'moment'\n\nconst App = () => {\n  const [contestsList, setContestsList] = useState([])\n  const [displayList, setDisplayList] = useState([])\n  const [displayCount, setDisplayCount] = useState(10)\n\n  // 情報取得  ok\n  const getInformation = async () => {\n    try {\n      const result = await axios.get(\n        `${'https://kenkoooo.com/atcoder/resources/contests.json'}`\n      )\n      result.data.sort((a, b) => {\n        if (a.start_epoch_second > b.start_epoch_second) {\n          return -1;\n        } else {\n          return 1;\n        }\n      })\n      objectChange(result.data)\n      setContestsList(result.data)\n      setDisplayList(result.data)\n      console.log(displayCount, \"first\")\n    } catch (error) {\n      // リクエストに失敗した時の処理\n      console.log('error!!')\n    }\n  }\n\n  // 日本時間、コンテスト時間　ok \n  const objectChange = (list) => {\n    return list.map(contest => {\n      contest.start = moment.unix(contest.start_epoch_second).format(\"YYYY-MM-DD HH:mm\")\n      contest.duration_second = contest.duration_second / 60 + 'min'// => 試験時間(分)\n      contest.url = `https://atcoder.jp/contests/${contest.id}`\n      return contest\n    })\n  }\n\n  useEffect(() => {\n    getInformation()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n\n  return (\n    <div className=\"App\">\n      <Header contestsList={contestsList} setContestsList={setContestsList} displayList={displayList} setDisplayList={setDisplayList} displayCount={displayCount} setDisplayCount={setDisplayCount} />\n      <Main contestsList={contestsList} setContestsList={setContestsList} displayList={displayList} setDisplayList={setDisplayList} displayCount={displayCount} setDisplayCount={setDisplayCount} />\n    </div>\n\n  )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}